services:
  api:
    # build: ./the-filter-factory
    image: api:latest
    container_name: api
    restart: always
    # ports:
    #   - "8000:8000"
    environment:
      DATABASE_URI: postgresql://postgres:admin@db:5432/the_filter_factory
    networks:
      - api-net
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    depends_on:
      - db

  lb:
    image: nginx:1.27.5-alpine-slim
    container_name: lb
    restart: always
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - ./config/certs:/etc/nginx/certs:ro
      - ./config/nginx:/etc/nginx/conf.d:ro
    networks:
      - api-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - api

  db:
    image: postgres:16
    container_name: db
    restart: always
    # ports:
    #   - 5432:5432
    environment:
      POSTGRES_PASSWORD: admin
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      # - db_data:/var/lib/postgresql/data
      - ./config/scripts:/docker-entrypoint-initdb.d
    networks:
      - api-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

networks:
  api-net:
    driver: bridge

# volumes:
#   db_data:
